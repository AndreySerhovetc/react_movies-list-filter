{"version":3,"sources":["components/Search/Search.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["Search","handleChange","event","target","value","props","setQuery","this","query","className","htmlFor","type","id","placeholder","onChange","React","Component","MovieCard","movie","imdbUrl","imgUrl","description","title","src","alt","href","MoviesList","movies","map","imdbId","App","state","setState","copyQuery","toLowerCase","visibleMovies","moviesFromServer","filter","includes","length","ReactDOM","render","document","getElementById"],"mappings":"+SAOaA,EAAb,4MACEC,aAAe,SAACC,GACd,IAAMC,EAASD,EAAMC,OAAOC,MAE5B,EAAKC,MAAMC,SAASH,IAJxB,4CAOE,WACE,IAAQF,EAAiBM,KAAjBN,aACAO,EAAUD,KAAKF,MAAfG,MAER,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOC,QAAQ,eAAeD,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEE,KAAK,OACLC,GAAG,eACHH,UAAU,QACVI,YAAY,mBACZT,MAAOI,EACPM,SAAUb,eAzBxB,GAA4Bc,IAAMC,WCArBC,G,YAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEc,IAAKH,EACLI,IAAI,kBAIV,sBAAKf,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEc,IAAI,wBACJC,IAAI,aAIV,qBAAKf,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2Ba,SAI/B,sBAAKb,UAAU,UAAf,UACGY,EACD,uBACA,mBAAGI,KAAMN,EAAT,6BChCGO,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKlB,UAAU,SAAf,SACGkB,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMW,cCDfC,EAAb,4MACEC,MAAe,CACbvB,MAAO,IAFX,EAKEF,SAAW,SAACF,GACV,EAAK4B,SAAS,CAAExB,MAAOJ,KAN3B,4CASE,WACE,IAAQI,EAAUD,KAAKwB,MAAfvB,MACFyB,EAAYzB,EAAM0B,cAChB5B,EAAaC,KAAbD,SAEF6B,EAAgBC,EAAiBC,QAAO,SAAAnB,GAAK,OACjDA,EAAMG,YAAYa,cAAcI,SAASL,IACtCf,EAAMI,MAAMY,cAAcI,SAASL,MAGxC,OACE,sBAAKxB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAQD,MAAOA,EAAOF,SAAUA,IAC/B6B,EAAcI,OACX,cAAC,EAAD,CAAYZ,OAAQQ,IACpB,qBAEN,qBAAK1B,UAAU,UAAf,sCA3BR,GAAyBM,IAAMC,WCN/BwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d729fa3c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void\n};\n\nexport class Search extends React.Component<Props> {\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target.value;\n\n    this.props.setQuery(target);\n  };\n\n  render() {\n    const { handleChange } = this;\n    const { query } = this.props;\n\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './MoviesList.scss';\nimport React from 'react';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { Search } from './components/Search';\nimport { MoviesList } from './components/MoviesList';\n\ntype State = {\n  query: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    query: '',\n  };\n\n  setQuery = (value: string) => {\n    this.setState({ query: value });\n  };\n\n  render() {\n    const { query } = this.state;\n    const copyQuery = query.toLowerCase();\n    const { setQuery } = this;\n\n    const visibleMovies = moviesFromServer.filter(movie => (\n      movie.description.toLowerCase().includes(copyQuery)\n      || movie.title.toLowerCase().includes(copyQuery)\n    ));\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <Search query={query} setQuery={setQuery} />\n          {visibleMovies.length\n            ? <MoviesList movies={visibleMovies} />\n            : 'Movie not found'}\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}